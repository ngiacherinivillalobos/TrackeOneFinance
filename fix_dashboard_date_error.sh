#!/bin/bash

echo "=== FIX DASHBOARD DATE ERROR - $(date) ==="
echo ""

echo "‚úÖ PROBLEMA IDENTIFICADO:"
echo "- RangeError: Invalid time value na linha 910:47 do Dashboard.tsx"
echo "- Erro causado por savingsGoal.target_date com valor inv√°lido/null sendo passado para createSafeDate()"
echo ""

echo "‚úÖ CORRE√á√ïES IMPLEMENTADAS:"
echo ""

echo "1. VALIDA√á√ÉO ADICIONAL NA LINHA 948 (Meta de Economia):"
echo "   ANTES: subtitle={savingsGoal ? \`Prazo: \${format(createSafeDate(savingsGoal.target_date), 'dd/MM/yyyy', { locale: ptBR })}\` : \"Progresso at√© o final do m√™s\"}"
echo "   DEPOIS: subtitle={savingsGoal && savingsGoal.target_date ? \`Prazo: \${format(createSafeDate(savingsGoal.target_date), 'dd/MM/yyyy', { locale: ptBR })}\` : \"Progresso at√© o final do m√™s\"}"
echo ""

echo "2. FUN√á√ÉO createSafeDate() MELHORADA no dateUtils.ts:"
echo "   ‚úÖ Valida√ß√£o de entrada (null, undefined, string vazia)"
echo "   ‚úÖ Valida√ß√£o de tipo (typeof dateStr !== 'string')"
echo "   ‚úÖ Try-catch para capturar erros"
echo "   ‚úÖ Verifica√ß√£o de data inv√°lida com isNaN(date.getTime())"
echo "   ‚úÖ Console.warn para debug de valores inv√°lidos"
echo "   ‚úÖ Retorno de new Date() como fallback seguro"
echo ""

echo "3. CENTRALIZA√á√ÉO DA FUN√á√ÉO:"
echo "   ‚úÖ Removida fun√ß√£o local createSafeDate() do Dashboard.tsx"
echo "   ‚úÖ Usando createSafeDate() centralizada do dateUtils.ts"
echo "   ‚úÖ Consist√™ncia com MonthlyControl.tsx"
echo ""

echo "‚úÖ ESTRUTURA FINAL DA VALIDA√á√ÉO:"
echo "export const createSafeDate = (dateStr: string): Date => {"
echo "  if (!dateStr || typeof dateStr !== 'string') return new Date();"
echo "  try {"
echo "    if (dateStr.includes('T')) {"
echo "      const date = new Date(dateStr);"
echo "      if (isNaN(date.getTime())) {"
echo "        console.warn('Data inv√°lida recebida:', dateStr);"
echo "        return new Date();"
echo "      }"
echo "      return date;"
echo "    }"
echo "    const date = new Date(dateStr + 'T12:00:00');"
echo "    if (isNaN(date.getTime())) {"
echo "      console.warn('Data inv√°lida recebida:', dateStr);"
echo "      return new Date();"
echo "    }"
echo "    return date;"
echo "  } catch (error) {"
echo "    console.warn('Erro ao criar data:', error, 'dateStr:', dateStr);"
echo "    return new Date();"
echo "  }"
echo "};"
echo ""

echo "‚úÖ RESULTADOS ESPERADOS:"
echo "- ‚ùå RangeError: Invalid time value eliminado"
echo "- ‚úÖ Dashboard carrega sem erros mesmo com target_date inv√°lido"
echo "- ‚úÖ Meta de Economia exibe texto padr√£o quando target_date √© inv√°lido"
echo "- ‚úÖ Console.warn mostra valores inv√°lidos para debug"
echo "- ‚úÖ Experi√™ncia do usu√°rio n√£o √© interrompida"
echo ""

echo "üîç CEN√ÅRIOS DE TESTE:"
echo "1. savingsGoal.target_date = null"
echo "2. savingsGoal.target_date = undefined"
echo "3. savingsGoal.target_date = ''"
echo "4. savingsGoal.target_date = 'invalid-date'"
echo "5. savingsGoal.target_date = '2025-02-30' (data inv√°lida)"
echo "6. savingsGoal.target_date = '2025-12-31' (data v√°lida)"
echo ""

echo "üìã ARQUIVOS MODIFICADOS:"
echo "- client/src/pages/Dashboard.tsx (linha 948 + import + remo√ß√£o fun√ß√£o local)"
echo "- client/src/utils/dateUtils.ts (fun√ß√£o createSafeDate melhorada)"
echo ""

echo "=== FIX COMPLETO - ERRO DE DATA NO DASHBOARD RESOLVIDO ==="
