version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: trackone-postgres
    environment:
      POSTGRES_DB: trackone_finance
      POSTGRES_USER: ${DB_USER:-trackone_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secure_password_123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-trackone_user} -d trackone_finance"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - trackone-network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.server
    container_name: trackone-backend
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${DB_USER:-trackone_user}:${DB_PASSWORD:-secure_password_123}@postgres:5432/trackone_finance
      JWT_SECRET: ${JWT_SECRET:-your-super-secure-jwt-secret-for-production}
      PORT: 3001
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost}
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - trackone-network
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.client
    container_name: trackone-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - trackone-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  trackone-network:
    driver: bridge
